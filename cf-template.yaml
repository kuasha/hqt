---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Application/API powered by API Gateway and Lambda - Adapted from AWS example templates
Parameters:
  DomainName:
    Type: String
    Description: API Domain name
    Default: ''

  DDBReadCapacityUnits:
    Type: Number
    Description: Read capacity units for dynamo db tables
    Default: 5

  DDBWriteCapacityUnits:
    Type: Number
    Description: Write capacity units for dynamo db tables
    Default: 5

  LocalDevEndpoint:
    Type: String
    Default: 'http://localhost:8088'
    Description: Enter local dev endpoint.

  HQTriviaAPIStageName:
    Type: String
    Default: 'api'
    Description: Enter HQTrivia API Stage Name.

  HQTriviaAPIVersionPrefix:
    Type: String
    Default: 'v1'
    Description: Enter HQTrivia API Version Prefix.

  CognitoUserPoolName:
    Type: String
    Default: 'HQTriviaUserPool'
    Description: Enter Cognito User Pool Name.

  CognitoUserPoolClientName:
    Type: String
    Default: 'HQTriviaApp'
    Description: Enter Cognito User Pool Client Name.

  HQTriviaCognitoUserPoolDomainName:
    Type: String
    Default: 'hqtriviagameserver'
    Description: Enter Cognito User Pool Domain Name.

Conditions:
  UseDomainName:
    !Not
      - !Equals
        - !Ref DomainName
        - ''

Resources:
  HQTriviaApi:
    Type: AWS::Serverless::Api
    Cors: "'*'"
    Auth:
      DefaultAuthorizer: HQTriviaCognitoAuthorizer
      Authorizers:
        HQTriviaCognitoAuthorizer:
          UserPoolArn: !GetAtt HQTriviaCognitoUserPool.Arn
    Properties:
      StageName: !Ref HQTriviaAPIStageName

  HQTriviaLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: main.lambda_handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 30
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref HQTriviaApi
            Path: '/{version}/{resource+}'
            Method: ANY
      Environment:
        Variables:
          GameResourceS3BucketName: !Ref GameResourceS3Bucket
          ResposeDBTableName: !Ref ResposeDBTable
          ParticipantDBTableName: !Ref ParticipantDBTable
          GameDBTableName: !Ref GameDBTable
          QuestionDBTableName: !Ref QuestionDBTable
          EpisodeDBTableName: !Ref EpisodeDBTable
          ResposeStatisticsDBTableName: !Ref ResposeStatisticsDBTable
          EpisodeWorkerSQSURL: !Ref EpisodeWorkQueue
      Policies:
        # DynamoDB Full Access to start
        - AmazonDynamoDBFullAccess
        - AmazonSQSFullAccess

  HQTriviaApiCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Condition: UseDomainName
    Properties:
      DomainName: !Sub '*.${DomainName}'
      DomainValidationOptions:
        - DomainName: !Sub '*.${DomainName}'
          ValidationDomain: !Ref DomainName
      SubjectAlternativeNames:
        - !Ref DomainName
  
  HQTriviaApiDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Condition: UseDomainName
    Properties:
      CertificateArn: !Ref HQTriviaApiCertificate
      DomainName: !Ref DomainName
  
  HQTriviaApiBasePathMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Condition: UseDomainName
    Properties:
      RestApiId: !Ref HQTriviaApi
      DomainName: !Ref HQTriviaApiDomainName
      BasePath: '(none)'
      Stage: !Ref HQTriviaAPIStageName
  
  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Condition: UseDomainName
    Properties:
      Name: !Ref DomainName
  
  HQTriviaApiRoute53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Condition: UseDomainName
    Properties:
      HostedZoneId: !Ref Route53HostedZone
      RecordSets:
        - Name: !Sub ${DomainName}.
          Type: A
          AliasTarget:
            EvaluateTargetHealth: false
            HostedZoneId: !GetAtt HQTriviaApiDomainName.DistributionHostedZoneId
            DNSName: !GetAtt HQTriviaApiDomainName.DistributionDomainName

  HQTriviaCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  HQTriviaCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref HQTriviaCognitoUserPool
      ClientName: !Ref CognitoUserPoolClientName
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows: 
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - profile
        - phone
      GenerateSecret: false
      CallbackURLs: 
        - !Sub https://${HQTriviaApi}.execute-api.${AWS::Region}.amazonaws.com/${HQTriviaAPIStageName}/${HQTriviaAPIVersionPrefix}/login/
        - !Sub ${LocalDevEndpoint}/login/
      LogoutURLs: 
        - !Sub https://${HQTriviaApi}.execute-api.${AWS::Region}.amazonaws.com/${HQTriviaAPIStageName}/${HQTriviaAPIVersionPrefix}/logout/
        - !Sub ${LocalDevEndpoint}/logout/
      SupportedIdentityProviders: 
        - COGNITO

  HQTriviaCognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Ref HQTriviaCognitoUserPoolDomainName
      UserPoolId: !Ref HQTriviaCognitoUserPool

  GameDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  QuestionDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  ParticipantDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: episode_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema: 
        - AttributeName: episode_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  ParticipantHandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: main.participant_handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 30
      Environment:
        Variables:
          GameResourceS3BucketName: !Ref GameResourceS3Bucket
          ResposeDBTableName: !Ref ResposeDBTable
          ParticipantDBTableName: !Ref ParticipantDBTable
          GameDBTableName: !Ref GameDBTable
          QuestionDBTableName: !Ref QuestionDBTable
          EpisodeDBTableName: !Ref EpisodeDBTable
          ResposeStatisticsDBTableName: !Ref ResposeStatisticsDBTable
          EpisodeWorkerSQSURL: !Ref EpisodeWorkQueue
      Policies:
        - AmazonDynamoDBFullAccess

  ParticipantHandlerEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt ParticipantDBTable.StreamArn
      FunctionName: !GetAtt ParticipantHandlerLambdaFunction.Arn
      StartingPosition: "TRIM_HORIZON"
      
  EpisodeDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  ResposeDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: episode_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema: 
        - AttributeName: episode_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  ResposeStatisticsDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: episode_id
          AttributeType: S
        - AttributeName: question_id
          AttributeType: S
      KeySchema: 
        - AttributeName: episode_id
          KeyType: HASH
        - AttributeName: question_id
          KeyType: RANGE   
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBReadCapacityUnits
        WriteCapacityUnits: !Ref DDBWriteCapacityUnits

  ResponseHandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: main.response_handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 30
      Environment:
        Variables:
          GameResourceS3BucketName: !Ref GameResourceS3Bucket
          ResposeDBTableName: !Ref ResposeDBTable
          ParticipantDBTableName: !Ref ParticipantDBTable
          GameDBTableName: !Ref GameDBTable
          QuestionDBTableName: !Ref QuestionDBTable
          EpisodeDBTableName: !Ref EpisodeDBTable
          ResposeStatisticsDBTableName: !Ref ResposeStatisticsDBTable
          EpisodeWorkerSQSURL: !Ref EpisodeWorkQueue
      Policies:
        - AmazonDynamoDBFullAccess

  ResponseHandlerEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt ResposeDBTable.StreamArn
      FunctionName: !GetAtt ResponseHandlerLambdaFunction.Arn
      StartingPosition: "TRIM_HORIZON"

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'origin identity'
  
  GameResourceS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref GameResourceS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${GameResourceS3Bucket}/*'

  GameResourceS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  GameResourceEntrypointDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub '${GameResourceS3Bucket}.s3.${AWS::Region}.amazonaws.com'
            Id: S3-GameResourceS3Bucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginIdentity}'
          - DomainName: !Sub '${HQTriviaApi}.execute-api.${AWS::Region}.amazonaws.com'
            Id: API-Gateway-Origin
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer

        Enabled: 'true'
        CacheBehaviors:
        - AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          PathPattern: !Sub '${HQTriviaAPIStageName}/${HQTriviaAPIVersionPrefix}/*'
          TargetOriginId: API-Gateway-Origin
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: S3-GameResourceS3Bucket
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'

  CanaryWorkerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: canary.worker_handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 30
      Environment:
        Variables:
          GameResourceS3BucketName: !Ref GameResourceS3Bucket
          ResposeDBTableName: !Ref ResposeDBTable
          ParticipantDBTableName: !Ref ParticipantDBTable
          GameDBTableName: !Ref GameDBTable
          QuestionDBTableName: !Ref QuestionDBTable
          EpisodeDBTableName: !Ref EpisodeDBTable
          ResposeStatisticsDBTableName: !Ref ResposeStatisticsDBTable
          EpisodeWorkerSQSURL: !Ref EpisodeWorkQueue
      Policies:
        - AmazonDynamoDBFullAccess

  WorkerLambdaScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Worker Lambda Scheduled Rule"
      ScheduleExpression: "rate(10 minute)"
      State: "ENABLED"
      Targets: 
        - Id: "WorkerLambdaFunctionTarget"
          Arn: !GetAtt CanaryWorkerLambdaFunction.Arn

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref CanaryWorkerLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt WorkerLambdaScheduledRule.Arn

  EpisodeWorkQueue: 
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 20

  EpisodeManagerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: main.episode_handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 15
      Environment:
        Variables:
          GameResourceS3BucketName: !Ref GameResourceS3Bucket
          ResposeDBTableName: !Ref ResposeDBTable
          ParticipantDBTableName: !Ref ParticipantDBTable
          GameDBTableName: !Ref GameDBTable
          QuestionDBTableName: !Ref QuestionDBTable
          EpisodeDBTableName: !Ref EpisodeDBTable
          ResposeStatisticsDBTableName: !Ref ResposeStatisticsDBTable
          EpisodeWorkerSQSURL: !Ref EpisodeWorkQueue
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonSQSFullAccess

  LambdaFunctionSQSSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt EpisodeWorkQueue.Arn
      FunctionName: !GetAtt EpisodeManagerLambdaFunction.Arn

  PermissionForSQSToInvokeEpisodeManagerLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref EpisodeManagerLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "sqs.amazonaws.com"
      SourceArn: !GetAtt EpisodeWorkQueue.Arn


Outputs:
  ApiUrl:
    Description: Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub https://${HQTriviaApi}.execute-api.${AWS::Region}.amazonaws.com/

  LoginUrl:
    Description: Login URL
    Value: !Sub https://${HQTriviaCognitoUserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/oauth2/authorize?response_type=token&&client_id=${HQTriviaCognitoUserPoolClient}&redirect_uri=https://${HQTriviaApi}.execute-api.${AWS::Region}.amazonaws.com/login/

  GameResourceEntrypointDistribution:
    Description: Game main entrypoint
    Value: !GetAtt GameResourceEntrypointDistribution.DomainName
